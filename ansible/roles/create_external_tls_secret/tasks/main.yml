---

- name: Check for existing external-tls-secret
  kubernetes.core.k8s_info:
    api_key: "{{ api_key | default(omit) }}"
    kind: Secret
    kubeconfig: "{{ kubeconfig_path }}"
    name: external-tls-secret
    namespace: "{{ target_namespace }}"
  register: _result

- name: Set fact if external-tls-secret exists
  set_fact:
    external_tls_secret_present: "{{ _result.resources[0].data['cert.crt'] is defined }}"

- name: Fetch ibm-nginx-internal-tls-ca secret
  kubernetes.core.k8s_info:
    api_key: "{{ api_key | default(omit) }}"
    kind: Secret
    kubeconfig: "{{ kubeconfig_path }}"
    name: ibm-nginx-internal-tls-ca
    namespace: "{{ target_namespace }}"
  register: _result_tls_ca
  delay: 20
  retries: 90
  until: _result_tls_ca.resources[0].data | default('') | length > 0
  when: not external_tls_secret_present

- name: Create external-tls-secret
  kubernetes.core.k8s:
    api_key: "{{ api_key | default(omit) }}"
    kind: Secret
    kubeconfig: "{{ kubeconfig_path }}"
    name: external-tls-secret
    namespace: "{{ target_namespace }}"
    definition:
      data: "{{ _result_tls_ca.resources[0].data }}"
      type: "{{ _result_tls_ca.resources[0].type }}"
  register: _result
  when: not external_tls_secret_present
