---

- name: Create the OperandRegistry
  kubernetes.core.k8s:
    api_key: "{{ api_key | default(omit) }}"
    api_version: operator.ibm.com/v1alpha1
    kind: OperandRegistry
    kubeconfig: "{{ kubeconfig_path }}"
    name: "{{ common_service_operand_name }}"
    namespace: "{{ target_namespace }}"
    definition:
      spec:
        operators:
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-licensing-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-licensing-operator-app
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_catalog_source_namespace }}"
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-mongodb-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-mongodb-operator-app
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_catalog_source_namespace }}"
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-cert-manager-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-cert-manager-operator
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_catalog_source_namespace }}"
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-iam-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-iam-operator
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_catalog_source_namespace }}"
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-management-ingress-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-management-ingress-operator-app
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_catalog_source_namespace }}"
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-ingress-nginx-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-ingress-nginx-operator-app
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_catalog_source_namespace }}"
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-platform-api-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-platform-api-operator-app
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_catalog_source_namespace }}"
        - channel: v3
          installPlanApproval: Automatic
          name: ibm-events-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-events-operator
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_operator_catalog_source_namespace }}"
        - channel: "{{ common_service_operator_channel }}"
          installPlanApproval: Automatic
          name: ibm-zen-operator
          namespace: "{{ common_service_namespace }}"
          packageName: ibm-zen-operator
          scope: public
          sourceName: "{{ common_service_catalog_source_name }}"
          sourceNamespace: "{{ common_service_operator_catalog_source_namespace }}"
  register: _result

- name: Create the OperandConfig
  kubernetes.core.k8s:
    api_key: "{{ api_key | default(omit) }}"
    api_version: operator.ibm.com/v1alpha1
    kind: OperandConfig
    kubeconfig: "{{ kubeconfig_path }}"
    name: "{{ common_service_operand_name }}"
    namespace: "{{ target_namespace }}"
    definition:
      spec:
        services:
        - name: ibm-licensing-operator
          spec:
            IBMLicensing:
              datasource: datacollector
              resources:
                limits:
                  cpu: 200m
                  memory: 850Mi
                requests:
                  cpu: 100m
                  memory: 430Mi
            operandBindInfo: {}
        - name: ibm-mongodb-operator
          spec:
            mongoDB:
              metrics:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 350Mi
                  requests:
                    cpu: 100m
                    memory: 300Mi
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 640Mi
                requests:
                  cpu: 500m
                  memory: 640Mi
            operandRequest: {}
        - name: ibm-cert-manager-operator
          spec:
            certManager:
              certManagerCAInjector:
                resources:
                  limits:
                    cpu: 100m
                    memory: 520Mi
                  requests:
                    cpu: 20m
                    memory: 410Mi
              certManagerController:
                resources:
                  limits:
                    cpu: 80m
                    memory: 530Mi
                  requests:
                    cpu: 20m
                    memory: 230Mi
              certManagerWebhook:
                resources:
                  limits:
                    cpu: 60m
                    memory: 100Mi
                  requests:
                    cpu: 30m
                    memory: 40Mi
        - name: ibm-iam-operator
          spec:
            operandRequest: {}
            secretwatcher:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 145Mi
                requests:
                  cpu: 20m
                  memory: 40Mi
            policycontroller:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 60Mi
                requests:
                  cpu: 20m
                  memory: 30Mi
            policydecision:
              auditService:
                resources:
                  limits:
                    cpu: 20m
                    memory: 40Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 50Mi
                requests:
                  cpu: 70m
                  memory: 30Mi
            operandBindInfo:
              bindings:
                protected-zen-serviceid:
                  secret: zen-serviceid-apikey-secret
            oidcclientwatcher:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 256Mi
                requests:
                  cpu: 20m
                  memory: 34Mi
            authentication:
              auditService:
                resources:
                  limits:
                    cpu: 20m
                    memory: 40Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              authService:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 1090Mi
                  requests:
                    cpu: 600m
                    memory: 650Mi
              clientRegistration:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 50Mi
                  requests:
                    cpu: 20m
                    memory: 50Mi
              config:
                onPremMultipleDeploy: false
              identityManager:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 410Mi
                  requests:
                    cpu: 260m
                    memory: 240Mi
              identityProvider:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 420Mi
                  requests:
                    cpu: 570m
                    memory: 250Mi
              replicas: 1
            securityonboarding:
              iamOnboarding:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 1024Mi
                  requests:
                    cpu: 20m
                    memory: 64Mi
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 50Mi
                requests:
                  cpu: 20m
                  memory: 50Mi
            pap:
              auditService:
                resources:
                  limits:
                    cpu: 20m
                    memory: 40Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              papService:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 380Mi
                  requests:
                    cpu: 30m
                    memory: 190Mi
              replicas: 1
        - name: ibm-management-ingress-operator
          spec:
            managementIngress:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 170Mi
                requests:
                  cpu: 70m
                  memory: 70Mi
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-ingress-nginx-operator
          spec:
            nginxIngress:
              defaultBackend:
                replicas: 1
                resources:
                  limits:
                    cpu: 20m
                    memory: 50Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              ingress:
                replicas: 1
                resources:
                  limits:
                    cpu: 1000m
                    memory: 350Mi
                  requests:
                    cpu: 100m
                    memory: 110Mi
              kubectl:
                resources:
                  limits:
                    cpu: 30m
                    memory: 150Mi
                  requests:
                    cpu: 30m
                    memory: 150Mi
        - name: ibm-platform-api-operator
          spec:
            operandRequest: {}
            platformApi:
              auditService:
                resources:
                  limits:
                    cpu: 25m
                    memory: 50Mi
                  requests:
                    cpu: 20m
                    memory: 30Mi
              platformApi:
                resources:
                  limits:
                    cpu: 25m
                    memory: 50Mi
                  requests:
                    cpu: 20m
                    memory: 30Mi
              replicas: 1
        - name: ibm-zen-operator
          resources:
            - apiVersion: batch/v1
              data:
                spec:
                  activeDeadlineSeconds: 600
                  backoffLimit: 5
                  template:
                    metadata:
                      annotations:
                        productID: 068a62892a1e4db39641342e592daa25
                        productMetric: FREE
                        productName: IBM Cloud Platform Common Services
                    spec:
                      affinity:
                        nodeAffinity:
                          requiredDuringSchedulingIgnoredDuringExecution:
                            nodeSelectorTerms:
                            - matchExpressions:
                              - key: kubernetes.io/arch
                                operator: In
                                values:
                                - amd64
                                - ppc64le
                                - s390x
                      containers:
                      - command:
                        - bash
                        - '-c'
                        - bash /setup/pre-zen.sh
                        env:
                        - name: common_services_namespace
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        image: >-
                          icr.io/cpopen/ibm-zen-operator@sha256:92984f1c7f2600ed3f958f08eb03b617a2ed68850555a80a764dabef4cca4b5e
                        name: pre-zen-job
                        resources:
                          limits:
                            cpu: 500m
                            memory: 512Mi
                          requests:
                            cpu: 100m
                            memory: 50Mi
                        securityContext:
                          allowPrivilegeEscalation: false
                          capabilities:
                            drop:
                            - ALL
                          privileged: false
                          readOnlyRootFilesystem: false
                      restartPolicy: OnFailure
                      securityContext:
                        runAsNonRoot: true
                      serviceAccount: operand-deployment-lifecycle-manager
                      serviceAccountName: operand-deployment-lifecycle-manager
                      terminationGracePeriodSeconds: 30
              force: true
              kind: Job
              name: pre-zen-operand-config-job
  register: _result
