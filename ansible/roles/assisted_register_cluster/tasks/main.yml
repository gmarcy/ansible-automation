---

- name: Get a list of the cluster objects
  uri:
    url: "{{ assisted_install_rest_url }}/clusters"
  register: _result

- name: See if a cluster already exists with our name
  set_fact:
    cluster_id: "{{ item.id }}"
  loop: "{{ _result.json }}"
  when: item.name == cluster_name

# TODO: Compare fields against the values we would use to create the cluster

- block:

    - name: Register our cluster
      uri:
        url: "{{ assisted_install_rest_url }}/clusters"
        method: POST
        body_format: json
        body:
          name: "{{ cluster_name }}"
          openshift_version: "{{ openshift_version }}"
          pull_secret: "{{ openshift_pullsecret | string }}"
          high_availability_mode: "{{ 'None' if (single_node) else 'Full' }}"
          base_dns_domain: "{{ base_dns_domain }}"
          ssh_public_key: "{{ ssh_public_key }}"
          http_proxy: "{{ http_proxy }}"
          network_type: "{{ 'OVNKubernetes' if (single_node) else 'OpenShiftSDN' }}"
          machine_networks:
          - cidr: "{{ network_cidr }}"
          api_vip: "{{ api_vip | default(omit) }}"
          ingress_vip: "{{ ingress_vip | default(omit) }}"
          vip_dhcp_allocation: false
          schedulable_masters: true
          additional_ntp_source: 'ns-gce.sslip.io,time.cloudflare.com'
        status_code: 201
      register: _result

    - name: Set cluster id
      set_fact:
        cluster_id: "{{ _result.json.id }}"

  when: cluster_id | default('') | length == 0

- name: Get a list of the infra-env objects
  uri:
    url: "{{ assisted_install_rest_url }}/infra-envs"
  register: _result

- name: See if our infra-env already exists
  set_fact:
    infra_env_id: "{{ item.id }}"
  loop: "{{ _result.json }}"
  when: item.name == (cluster_name + '_infra-env')

- name: Register infra-env for our cluster
  uri:
    url: "{{ assisted_install_rest_url }}/infra-envs"
    method: POST
    body_format: json
    body:
      name: "{{ cluster_name }}_infra-env"
      cluster_id: "{{ cluster_id }}"
      openshift_version: "{{ openshift_version }}"
      proxy:
        http_proxy: "{{ http_proxy }}"
        no_proxy: ""
      pull_secret: "{{ openshift_pullsecret | string }}"
      ssh_authorized_key: "{{ ssh_public_key }}"
    status_code: 201
  register: _result
  when: infra_env_id | default('') | length == 0
