---

- name: Wait for hosts to enter ready to install state
  uri:
    url: "{{ hostvars[item].host_url }}"
  loop: "{{ groups['cluster_hosts'] }}"
  register: _result
  delay: 30
  retries: 20
  until: _result.json.status in ['known', 'installing-in-progress', 'installed']

- name: Collect the host status of all cluster hosts
  set_fact:
    all_host_states: "{{ _result.results | map(attribute='json.status') | unique }}"

- block:

    - name: Create the cluster directory
      file:
        path: "{{ cluster_dir }}"
        state: directory
        mode: '0755'

    - name: Get the existing cluster events from before the install
      uri:
        url: "{{ hostvars['assisted-install']['cluster_events_url'] }}"
      register: _result

    - name: Copy cluster events to cluster_dir
      copy:
        content: "{{ _result.json | to_nice_json }}"
        dest: "{{ cluster_dir }}/cluster_events.json"

    - name: Get a list of the cluster objects
      uri:
        url: "{{ hostvars['assisted-install']['cluster_url'] }}"
      register: _result

    - name: Copy cluster status to cluster_dir
      copy:
        content: "{{ _result.json | to_nice_json }}"
        dest: "{{ cluster_dir }}/cluster_status.json"

    - name: Install cluster
      uri:
        url: "{{ hostvars['assisted-install']['cluster_url'] }}/actions/install"
        method: POST
        status_code: 202
      register: _result
    
  when: all_host_states is subset(['known'])
