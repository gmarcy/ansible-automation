---

- name: Set facts for this role
  set_fact:
    cluster_dir: "{{ hostvars['cluster-facts']['cluster_dir'] }}"

- name: Set kubeconfig_path fact
  set_fact:
    kubeconfig_path: "{{ cluster_dir + '/kubeconfig' }}"

- name: Set kubeconfig_path cluster fact
  set_fact:
    kubeconfig_path: "{{ cluster_dir + '/kubeconfig' }}"
  delegate_to: 'cluster-facts'
  delegate_facts: true

- name: Check to see if we already have fetched the kubeconfig
  stat:
    path: "{{ kubeconfig_path }}"
  register: _result_stat

- when: not _result_stat.stat.exists
  block:

    - name: Create ~/.kube folder
      file:
        path: ~/.kube
        state: directory
      delegate_to: "{{ groups['master_nodes'][0] }}"

    - name: Copy kubeconfig
      copy:
        remote_src: true
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
      delegate_to: "{{ groups['master_nodes'][0] }}"

    - name: Create cluster_dir folder
      file:
        path: "{{ cluster_dir }}"
        state: directory

    - name: Fetch a copy of the kubeconfig for localhost
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ cluster_dir + '/' }}"
        flat: true
      delegate_to: "{{ groups['master_nodes'][0] }}"

    - name: Rename admin.conf to kubeconfig
      command: mv {{ cluster_dir + '/admin.conf' }} {{ kubeconfig_path }}
      register: _result
      changed_when: _result.rc == 0
      delegate_to: 'cluster-facts'

- name: Fetch kube-public cluster-info server api url
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}"
    kind: ConfigMap
    name: cluster-info
    namespace: kube-public
  register: _result

- name: Set cluster_api_url from kubeconfig data
  set_fact:
    cluster_api_url: "{{ (_result.resources[0].data.kubeconfig | from_yaml).clusters[0].cluster.server }}"
  delegate_to: 'cluster-facts'
  delegate_facts: true
