---

- name: Create Kafka instance
  kubernetes.core.k8s:
    api_key: "{{ api_key | default(omit) }}"
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: ibmevents.ibm.com/v1beta2
    kind: Kafka
    name: iaf-system
    namespace: "{{ target_namespace }}"
    definition:
      spec:
        clusterCa:
          generateCertificateAuthority: true
        entityOperator:
          template:
            pod:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: kubernetes.io/arch
                            operator: In
                            values:
                              - amd64
                              - s390x
                              - ppc64le
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                            - key: ibmevents.ibm.com/name
                              operator: In
                              values:
                                - iaf-system-kafka
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              metadata:
                annotations:
                  productID: 068a62892a1e4db39641342e592daa25
                  productMetric: FREE
                  productName: IBM Cloud Platform Common Services
              securityContext:
                runAsNonRoot: true
              tmpDirSizeLimit: 20Mi
            tlsSidecarContainer:
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: true
            topicOperatorContainer:
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: true
            userOperatorContainer:
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: true
          tlsSidecar:
            resources:
              limits:
                cpu: 500m
                memory: 128Mi
              requests:
                cpu: 500m
                memory: 128Mi
          topicOperator:
            resources:
              limits:
                cpu: 1
                memory: 1Gi
              requests:
                cpu: 1
                memory: 1Gi
          userOperator:
            resources:
              limits:
                cpu: 1
                memory: 1Gi
              requests:
                cpu: 1
                memory: 1Gi
        kafka:
          authorization:
            type: simple
          config:
            default.replication.factor: 3
            min.insync.replicas: 2
            offsets.topic.replication.factor: 3
            transaction.state.log.min.isr: 2
            transaction.state.log.replication.factor: 3
          listeners:
            - authentication:
                type: scram-sha-512
              name: tls
              port: 9093
              tls: true
              type: internal
            - authentication:
                type: scram-sha-512
              name: external
              port: 9094
              tls: true
              type: route
          replicas: 3
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 2
              memory: 4Gi
          storage:
            size: 10Gi
            type: persistent-claim
            class: "{{ hostvars['cluster-storage']['default_block_class'] }}"
          template:
            kafkaContainer:
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: true
            pod:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: kubernetes.io/arch
                            operator: In
                            values:
                              - amd64
                              - s390x
                              - ppc64le
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                            - key: ibmevents.ibm.com/name
                              operator: In
                              values:
                                - iaf-system-kafka
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              metadata:
                annotations:
                  productID: 068a62892a1e4db39641342e592daa25
                  productMetric: FREE
                  productName: IBM Cloud Platform Common Services
              securityContext:
                runAsNonRoot: true
              tmpDirSizeLimit: 20Mi
        zookeeper:
          replicas: 3
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 1
              memory: 2Gi
          storage:
            size: 10Gi
            type: persistent-claim
            class: "{{ hostvars['cluster-storage']['default_block_class'] }}"
          template:
            pod:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                      - matchExpressions:
                          - key: kubernetes.io/arch
                            operator: In
                            values:
                              - amd64
                              - s390x
                              - ppc64le
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                            - key: ibmevents.ibm.com/name
                              operator: In
                              values:
                                - iaf-system-kafka
                        topologyKey: kubernetes.io/hostname
                      weight: 100
              metadata:
                annotations:
                  productID: 068a62892a1e4db39641342e592daa25
                  productMetric: FREE
                  productName: IBM Cloud Platform Common Services
              securityContext:
                runAsNonRoot: true
              tmpDirSizeLimit: 20Mi
            zookeeperContainer:
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: true
    wait: "{{ wait_for_kafka_ready | default(true) }}"
    wait_condition:
      type: Ready
    wait_sleep: 60
    wait_timeout: 1500
  register: _result

- name: Create KafkaUser instance
  kubernetes.core.k8s:
    api_key: "{{ api_key | default(omit) }}"
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: ibmevents.ibm.com/v1beta2
    kind: KafkaUser
    name: websphereauto-kafka-auth
    namespace: "{{ target_namespace }}"
    definition:
      metadata:
        labels:
          ibmevents.ibm.com/cluster: iaf-system
      spec:
        authentication:
          type: scram-sha-512
        authorization:
          acls:
            - host: '*'
              operation: All
              resource:
                name: websphereauto
                patternType: prefix
                type: topic
            - host: '*'
              operation: All
              resource:
                name: websphereauto
                patternType: prefix
                type: group
            - host: '*'
              operation: Read
              resource:
                name: __schema_websphereauto
                patternType: prefix
                type: topic
            - host: '*'
              operation: Alter
              resource:
                name: __schema_websphereauto
                patternType: prefix
                type: topic
            - host: '*'
              operation: Describe
              resource:
                type: cluster
            - host: '*'
              operation: Read
              resource:
                name: __schema_
                patternType: prefix
                type: topic
          type: simple
    wait: "{{ wait_for_kafka_ready | default(true) }}"
    wait_condition:
      type: Ready
    wait_sleep: 20
    wait_timeout: 300
  register: _result
