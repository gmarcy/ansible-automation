---

- name: Set tasks_hidden
  set_fact:
    tasks_hidden: true
  no_log: true
  changed_when: false

- name: Get cluster status
  uri:
    url: "{{ cluster_url }}"
  register: _result_cluster_status
  no_log: "{{ tasks_hidden }}"

- name: Set current_cluster_status
  set_fact:
    current_cluster_status: "{{ _result_cluster_status.json }}"
  no_log: "{{ tasks_hidden }}"
  changed_when: false

- name: Determine if we need to generate changes
  set_fact:
    first_time: "{{ last_cluster_status is not defined }}"
    check_differences: "{{ last_cluster_status is not defined or ((last_cluster_status|string) != (current_cluster_status|string)) }}"
  no_log: "{{ tasks_hidden }}"

- block:

    - name: Clear cluster_changes
      set_fact:
        cluster_changes: {}
      no_log: "{{ tasks_hidden }}"
      when: cluster_changes is not defined or cluster_changes | dict2items | length > 0
      changed_when: false
    
    - name: Collect changes to cluster status
      set_fact:
        cluster_changes: "{{ cluster_changes | combine({item.key: item.value}) }}"
      loop: "{{ current_cluster_status | dict2items }}"
      no_log: "{{ tasks_hidden }}"
      when: item.key not in ['hosts', 'host_networks'] and (last_cluster_status is not defined or last_cluster_status[item.key] is not defined or last_cluster_status[item.key] != item.value)
      changed_when: false
    
    - name: Clear host_changes
      set_fact:
        host_changes: {}
      no_log: "{{ tasks_hidden }}"
      when: host_changes is not defined or host_changes | dict2items | length > 0
      changed_when: false

    - name: Set current_host_status
      set_fact:
        current_host_status: "{{ current_cluster_status.hosts | first | default({}) }}"
      no_log: "{{ tasks_hidden }}"
      changed_when: false
    
    - name: Collect changes to host status
      set_fact:
        host_changes: "{{ host_changes | combine({item.key: item.value}) }}"
      loop: "{{ current_host_status | dict2items }}"
      no_log: "{{ tasks_hidden }}"
      when: item.key not in ['inventory'] and (last_host_status is not defined or last_host_status[item.key] is not defined or last_host_status[item.key] != item.value)
      changed_when: false
    
    - name: Clear inventory_changes
      set_fact:
        inventory_changes: {}
      no_log: "{{ tasks_hidden }}"
      when: inventory_changes is not defined or inventory_changes | dict2items | length > 0
      changed_when: false

    - name: Set current_inventory_status
      set_fact:
        current_inventory_status: "{{ current_host_status.inventory | default({}) }}"
      no_log: "{{ tasks_hidden }}"
      changed_when: false
    
    - name: Collect changes to inventory status
      set_fact:
        inventory_changes: "{{ inventory_changes | combine({item.key: item.value}) }}"
      loop: "{{ current_inventory_status | dict2items }}"
      no_log: "{{ tasks_hidden }}"
      when: last_inventory_status is not defined or last_inventory_status[item.key] is not defined or last_inventory_status[item.key] != item.value
      changed_when: false
    
    - name: Update last_cluster_status
      set_fact:
        last_cluster_status: "{{ current_cluster_status }}"
      no_log: "{{ tasks_hidden }}"
      when: cluster_changes | dict2items | length > 0
      changed_when: false
    
    - name: Update last_host_status
      set_fact:
        last_host_status: "{{ current_host_status }}"
      no_log: "{{ tasks_hidden }}"
      when: host_changes | dict2items | length > 0
      changed_when: false
    
    - name: Update last_inventory_status
      set_fact:
        last_inventory_status: "{{ current_inventory_status }}"
      no_log: "{{ tasks_hidden }}"
      when: inventory_changes | dict2items | length > 0
      changed_when: false
    
    - name: Print changes to cluster status
      debug: var=cluster_changes
      when: cluster_changes | dict2items | length > 0
      changed_when: not first_time
    
    - name: Print changes to host status
      debug: var=host_changes
      when: host_changes | dict2items | length > 0
      changed_when: not first_time
    
    - name: Print changes to inventory status
      debug: var=inventory_changes
      when: inventory_changes | dict2items | length > 0
      changed_when: not first_time

  when: check_differences
    
- wait_for:
    timeout: 30
  when: last_cluster_status['status'] != 'installed'

- include_tasks: wait_for_install_complete.yml
  when: last_cluster_status['status'] != 'installed'
